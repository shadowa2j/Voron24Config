[extruder]
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF4
min_temp: 10
max_temp: 270

[heater_bed]
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF3
min_temp: 0
max_temp: 120

[temperature_sensor chamber_temp]
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF5
min_temp: 0
max_temp: 100
gcode_id: chamber_th

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[duplicate_pin_override]
pins: PD12 # this is the pin number that controller_fan uses in my printer.cfg

[fan_generic cpu_fans]
pin: PD12

[delayed_gcode skirt_fan_boot]
initial_duration: 1.0
gcode:
  {% if printer.print_stats.state|lower != "printing" %}
  SET_FAN_SPEED FAN=controlloer_fans SPEED=.5
  {% else %}
  SET_FAN_SPEED FAN=controller_fans SPEED=0.75 #just so I can see if this is getting called
  {% endif %}
  UPDATE_DELAYED_GCODE ID=skirt_fan DURATION=5

# Pi temperature monitoring loop. Check temp every 5 minutes & turn on skirt fans if too hot. Turn off if cool.
[delayed_gcode skirt_fan]
gcode:
  {% if printer.print_stats.state|lower != "printing" %}
  {% if printer['temperature_sensor raspberry_pi'].temperature >= 50 %}
  SET_FAN_SPEED FAN=controller_fans SPEED=1
  {% elif printer['temperature_sensor raspberry_pi'].temperature < 40 %}
  SET_FAN_SPEED FAN=controller_fans SPEED=0
  {% endif %}
  {% else %}
  SET_FAN_SPEED FAN=controller_fans SPEED=1
  {% endif %}
  UPDATE_DELAYED_GCODE ID=skirt_fan DURATION=300

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

#[filament_motion_sensor btt_sensor]
#detection_length: 10.0
#   The minimum length of filament pulled through the sensor to trigger
#   a state change on the switch_pin
#   Default is 7 mm.
#extruder: extruder
#   The name of the extruder section this sensor is associated with.
#   This parameter must be provided.
#switch_pin: ^PG11
#   The pin on which the switch is connected. This parameter must be
#   provided.
#pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode:
#    M117 Filament out
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
